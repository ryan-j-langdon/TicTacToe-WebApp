@page "/"
@namespace TicTacToe.Components
@using TicTacToe.Logic
@inject AppState app
@inject GameState state
@inject Opponent opponent

@if (app.currentView == AppState.View.ModeSelect)
{
    <h2 class="heading">Select Game Mode</h2>
    <div class="container">
        <button id="multiplayerButton" @onclick="MultiplayerButton">Multiplayer</button>
        <button id="versusAIButton" @onclick="VersusAIButton">Versus AI</button>
    </div>
}

@if (app.currentView == AppState.View.DifficultySelect)
{
    <h2 class="heading">Select Difficulty</h2>
    <div class="container">
        <button @onclick="() => SetDifficulty(Opponent.Difficulty.Easy)">Easy</button>
        <button @onclick="() => SetDifficulty(Opponent.Difficulty.Medium)">Medium</button>
        <button @onclick="() => SetDifficulty(Opponent.Difficulty.Impossible)">Impossible</button>
        <!-- TODO not implemented -->
        @* <h3 id="comingSoon">(More difficulties <br> coming soon!)</h3> *@
        
        <button id="backButton" @onclick="() => app.currentView = AppState.View.ModeSelect">Back</button>
    </div>
}

@if (app.currentView == AppState.View.GameBoard)
{
    <MainPage />
}

@code
{
    // Rerender if the view is changed from elsewhere
    protected override void OnInitialized()
    {
        app.OnViewChanged += StateHasChanged;
    }
    
    private void MultiplayerButton()
    {
        app.currentView = AppState.View.GameBoard;
        SetMode(GameState.Gamemode.Multiplayer);
    }

    private void VersusAIButton()
    {
        app.currentView = AppState.View.DifficultySelect;
        SetMode(GameState.Gamemode.AI_Opponent);
    }

    private void SetMode(GameState.Gamemode mode)
    {
        state.currentGamemode = mode;
    }

    private void SetDifficulty(Opponent.Difficulty diff)
    {
        opponent.currentDifficulty = diff;
        app.currentView = AppState.View.GameBoard;
    }

}
